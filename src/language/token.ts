export type TokenKind = Type | Keyword | Operator | Punctuation | Literal | Comment | Symbolic

export enum Type {
	VOID = 'TYPE_VOID',
	BOOL = 'TYPE_BOOL',
	STRING = 'TYPE_STRING',

	INT8 = 'TYPE_INT8',
	INT16 = 'TYPE_INT16',
	INT32 = 'TYPE_INT32',
	INT64 = 'TYPE_INT64',
	INT128 = 'TYPE_INT128',

	UINT8 = 'TYPE_UINT8',
	UINT16 = 'TYPE_UINT16',
	UINT32 = 'TYPE_UINT32',
	UINT64 = 'TYPE_UINT64',
	UINT128 = 'TYPE_UINT128',

	FLOAT32 = 'TYPE_FLOAT32',
	FLOAT64 = 'TYPE_FLOAT64',
}

export enum Keyword {
	LET = 'KEYWORD_LET',
	MUT = 'KEYWORD_MUT',
	FUNC = 'KEYWORD_FUNC',
	RETURN = 'KEYWORD_RETURN',
	IF = 'KEYWORD_IF',
	ELIF = 'KEYWORD_ELIF',
	ELSE = 'KEYWORD_ELSE',
	TRUE = 'KEYWORD_TRUE',
	FALSE = 'KEYWORD_FALSE',
}

export enum Operator {
	STRICT_COMP = 'STRICT_COMP',
	EQUALITY_COMP = 'EQUALITY_COMP',
	LESS_THAN_EQL = 'LESS_THAN_EQL',
	GREATER_THAN_EQL = 'GREATER_THAN_EQL',
	LESS_THAN = 'LESS_THAN',
	GREATER_THAN = 'GREATER_THAN',
	EXPONENTIAL = 'EXPONENTIAL',
	ASSIGNMENT = 'ASSIGNMENT',
	PLUS = 'PLUS',
	MINUS = 'MINUS',
	MULTIPLY = 'MULTIPLY',
	DIVIDE = 'DIVIDE',
	MODULO = 'MODULO',
}

export enum Punctuation {
	SEMICOLON = 'SEMICOLON',
	COLON = 'COLON',
	COMMA = 'COMMA',
	OPEN_BRACE = 'OPEN_BRACE',
	CLOSE_BRACE = 'CLOSE_BRACE',
	OPEN_PAREN = 'OPEN_PAREN',
	CLOSE_PAREN = 'CLOSE_PAREN',
}

export enum Literal {
	STRING = 'STRING_LITERAL',
	NUMERIC = 'NUMERIC_LITERAL',
	BOOLEAN = 'BOOLEAN_LITERAL',
}

export enum Comment {
	SINGLE_LINE = 'SINGLE_LINE_COMMENT',
	MULTI_LINE = 'MULTI_LINE_COMMENT',
}

export enum Symbolic {
	IDENTIFIER = 'IDENTIFIER',
	EOF = 'EOF',
}
